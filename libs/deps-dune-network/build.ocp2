(****************************************************************************)
(*                               Liquidity                                  *)
(*                                                                          *)
(*                  Copyright (C) 2017-2019 OCamlPro SAS                    *)
(*                                                                          *)
(*                    Authors: Fabrice Le Fessant                           *)
(*                             Alain Mebsout                                *)
(*                             David Declerck                               *)
(*                                                                          *)
(*  This program is free software: you can redistribute it and/or modify    *)
(*  it under the terms of the GNU General Public License as published by    *)
(*  the Free Software Foundation, either version 3 of the License, or       *)
(*  (at your option) any later version.                                     *)
(*                                                                          *)
(*  This program is distributed in the hope that it will be useful,         *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of          *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *)
(*  GNU General Public License for more details.                            *)
(*                                                                          *)
(*  You should have received a copy of the GNU General Public License       *)
(*  along with this program.  If not, see <https://www.gnu.org/licenses/>.  *)
(****************************************************************************)

(* This part of the library is made to create a minimal set of dependencies
to be able to run code that was directly extracted from Dune Network *)

function pp_js(file) {
    return file,
           { pp =  ["camlp4o"; "%{js_of_ocaml-camlp4_SRC_DIR}%/pa_js.cma"]};
}

OCaml.library("ocplib-fake-lwt",
   ocaml + {
     files = [
       "utils.ml";
       "lwt.ml";
       "lwt_list.ml";
       "lwt_mutex.ml";
       "lwt_stream.ml";
       "lwt_io.ml";
     ];
   });

if( with_dune_network ) {

if( for_javascript ) {

OCaml.library("zarith", ocaml + {
     files = [
       "z.ml";
     ];
     requires = [
       "nums";
   ];
});

OCaml.library("ezjsonm", ocaml + {
     requires = [
       "ocplib-ezjsonm-js";
   ];
});

OCaml.library("dune-network-deps", ocaml + {
     files = [
       pp_js("js/blake2.ml");
       "hacl.ml";
     ];
     requires = [
       "zarith";
       "lwt";
       (* "cstruct"; *)
       "bigstring";
       "ocplib-endian";
       "uutf";
       "ocplib-ezjsonm-js";
       "ocp-libsodium-js";
       "js_of_ocaml";
       "hex";
       "digestif.ocaml";
   ];
});

} else {

OCaml.library("dune-network-deps", ocaml + {
     files = [
       "blake2b-ref.c";    (* from BLAKE/BLAKE *)
       "blake2b-stubs.c";
       "blake2.ml";
       "hacl.ml";
     ];
     requires = [
       "zarith";
       (* "cstruct"; *)
       "bigstring";
       "ocplib-endian";
       "lwt";
       "digestif.ocaml";
       "sodium";
       "ezjsonm";
     ];
});

}
}
