contract Appstore = {
  type app = {
    name: string,
    owner: address,
  };

  type storage =  map(string, app);

  let%entry main = (name: string, store) => {
    let amount = Current.amount();

    if (amount < 5.00DUN) {
      Current.failwith("Not enough money, at least 5tz to vote");
    };

    ([], store);
  };
};

let nothing: (list(operation), unit) = ([], ())
/* Creates a storage for Multi with one administrator. */;

let admins = Set([tz1XEKgRQtqV2XamF9CR7avwNq1V2hPDgNbL]);

let init_storage = (name: string) =>
  Map([("name", { Appstore.name : "test" ,
                  Appstore.owner : tz1XEKgRQtqV2XamF9CR7avwNq1V2hPDgNbL })]);


let deploy_contract_op = (storage: Appstore.storage): (operation, address) => {
  let delegate: option(key_hash) = None;
  Contract.create(
    ~delegate,
    ~amount=0tz,
    ~storage,
    ~code=(contract Appstore),
  );
};

type storage = unit;

let%entry test = (_param: unit, _storage: unit) => {
  let (main_op, main) = deploy_contract_op(init_storage("eple"));
  ([main_op], ())
};
